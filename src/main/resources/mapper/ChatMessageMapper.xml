<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.penstore.dao.ChatMessageMapper">
    <!-- 标记为已读 -->
    <update id="markAsRead">
        UPDATE chat_messages
        SET is_read = true
        WHERE receiver_id = #{receiverId}
          AND sender_id = #{senderId}
          AND is_read = false
    </update>
    <!-- 插入消息 -->
    <insert id="insertMessage" parameterType="com.example.penstore.domain.ChatMessage"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO chat_messages
            (sender_id, receiver_id, content, timestamp, is_read)
        VALUES
            (#{senderId}, #{receiverId}, #{content}, #{timestamp}, #{isRead})
    </insert>

    <!-- 获取最后一条对方发给我的消息和时间 -->
    <select id="selectLastMessage" resultType="map">
        SELECT content, timestamp
        FROM chat_messages
        WHERE sender_id = #{senderId}
          AND receiver_id = #{receiverId}
        ORDER BY timestamp DESC
            LIMIT 1
    </select>

    <!-- 获取我的未读消息数量 -->
    <select id="countUnreadMessages" resultType="int">
        SELECT COUNT(*)
        FROM chat_messages
        WHERE receiver_id = #{receiverId}
          AND sender_id = #{senderId}
          AND is_read = 0
    </select>

    <!-- 获取所有聊天记录（双方往来消息） -->
    <select id="selectAllChatMessages" resultType="com.example.penstore.domain.ChatMessage">
        SELECT *
        FROM chat_messages
        WHERE (sender_id = #{senderId} AND receiver_id = #{receiverId})
           OR (sender_id = #{receiverId} AND receiver_id = #{senderId})
        ORDER BY timestamp ASC
    </select>

</mapper>